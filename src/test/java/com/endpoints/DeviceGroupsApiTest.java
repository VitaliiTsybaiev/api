/*
 * API V3
 * Please log in using your email and password in order to use API
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.endpoints;


import com.endpoints.clients.DeviceGroupsApi;
import com.endpoints.models.CreateUpdateDeviceGroupModel;
import io.restassured.builder.RequestSpecBuilder;
import io.restassured.filter.log.ErrorLoggingFilter;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Ignore;
import org.testng.annotations.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static com.endpoints.GsonObjectMapper.gson;
import static io.restassured.config.ObjectMapperConfig.objectMapperConfig;
import static io.restassured.config.RestAssuredConfig.config;

/**
 * API tests for DeviceGroupsApi
 */
@Ignore
public class DeviceGroupsApiTest {

    private DeviceGroupsApi api;

    @BeforeClass
    public void createApi() {
        api = ApiClient.api(ApiClient.Config.apiConfig().reqSpecSupplier(
                () -> new RequestSpecBuilder().setConfig(config().objectMapperConfig(objectMapperConfig().defaultObjectMapper(gson())))
                        .addFilter(new ErrorLoggingFilter())
                        .setBaseUri("https://api.staging.clearpathgps.com/v3.0"))).deviceGroups();
    }

    /**
     * OK
     */
    @Test
    public void shouldSee200AfterAllDeviceGroupsForAccountIdUsingGET() {
        api.allDeviceGroupsForAccountIdUsingGET().execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Unauthorized
     */
    @Test
    public void shouldSee401AfterAllDeviceGroupsForAccountIdUsingGET() {
        api.allDeviceGroupsForAccountIdUsingGET().execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Insufficient privileges
     */
    @Test
    public void shouldSee403AfterAllDeviceGroupsForAccountIdUsingGET() {
        api.allDeviceGroupsForAccountIdUsingGET().execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Too many requests
     */
    @Test
    public void shouldSee429AfterAllDeviceGroupsForAccountIdUsingGET() {
        api.allDeviceGroupsForAccountIdUsingGET().execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * Created
     */
    @Test
    public void shouldSee201AfterCreateDeviceGroupUsingPOST() {
        CreateUpdateDeviceGroupModel deviceGroupModel = null;
        api.createDeviceGroupUsingPOST()
                .body(deviceGroupModel).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Invalid JSON
     */
    @Test
    public void shouldSee400AfterCreateDeviceGroupUsingPOST() {
        CreateUpdateDeviceGroupModel deviceGroupModel = null;
        api.createDeviceGroupUsingPOST()
                .body(deviceGroupModel).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Unauthorized
     */
    @Test
    public void shouldSee401AfterCreateDeviceGroupUsingPOST() {
        CreateUpdateDeviceGroupModel deviceGroupModel = null;
        api.createDeviceGroupUsingPOST()
                .body(deviceGroupModel).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Insufficient privileges
     */
    @Test
    public void shouldSee403AfterCreateDeviceGroupUsingPOST() {
        CreateUpdateDeviceGroupModel deviceGroupModel = null;
        api.createDeviceGroupUsingPOST()
                .body(deviceGroupModel).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Device Group already exists
     */
    @Test
    public void shouldSee409AfterCreateDeviceGroupUsingPOST() {
        CreateUpdateDeviceGroupModel deviceGroupModel = null;
        api.createDeviceGroupUsingPOST()
                .body(deviceGroupModel).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Too many requests
     */
    @Test
    public void shouldSee429AfterCreateDeviceGroupUsingPOST() {
        CreateUpdateDeviceGroupModel deviceGroupModel = null;
        api.createDeviceGroupUsingPOST()
                .body(deviceGroupModel).execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * No Content
     */
    @Test
    public void shouldSee204AfterDeleteDeviceGroupUsingDELETE() {
        String groupId = null;
        api.deleteDeviceGroupUsingDELETE()
                .groupIdPath(groupId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Unauthorized
     */
    @Test
    public void shouldSee401AfterDeleteDeviceGroupUsingDELETE() {
        String groupId = null;
        api.deleteDeviceGroupUsingDELETE()
                .groupIdPath(groupId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Insufficient privileges
     */
    @Test
    public void shouldSee403AfterDeleteDeviceGroupUsingDELETE() {
        String groupId = null;
        api.deleteDeviceGroupUsingDELETE()
                .groupIdPath(groupId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Too many requests
     */
    @Test
    public void shouldSee429AfterDeleteDeviceGroupUsingDELETE() {
        String groupId = null;
        api.deleteDeviceGroupUsingDELETE()
                .groupIdPath(groupId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * OK
     */
    @Test
    public void shouldSee200AfterGetDeviceGroupUsingGET() {
        String groupId = null;
        api.getDeviceGroupUsingGET()
                .groupIdPath(groupId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Unauthorized
     */
    @Test
    public void shouldSee401AfterGetDeviceGroupUsingGET() {
        String groupId = null;
        api.getDeviceGroupUsingGET()
                .groupIdPath(groupId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Access denied | Insufficient privileges
     */
    @Test
    public void shouldSee403AfterGetDeviceGroupUsingGET() {
        String groupId = null;
        api.getDeviceGroupUsingGET()
                .groupIdPath(groupId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Device Group not found
     */
    @Test
    public void shouldSee404AfterGetDeviceGroupUsingGET() {
        String groupId = null;
        api.getDeviceGroupUsingGET()
                .groupIdPath(groupId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Too many requests
     */
    @Test
    public void shouldSee429AfterGetDeviceGroupUsingGET() {
        String groupId = null;
        api.getDeviceGroupUsingGET()
                .groupIdPath(groupId).execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * OK
     */
    @Test
    public void shouldSee200AfterUpdateDeviceGroupUsingPUT() {
        CreateUpdateDeviceGroupModel deviceGroupModel = null;
        api.updateDeviceGroupUsingPUT()
                .body(deviceGroupModel).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Invalid JSON
     */
    @Test
    public void shouldSee400AfterUpdateDeviceGroupUsingPUT() {
        CreateUpdateDeviceGroupModel deviceGroupModel = null;
        api.updateDeviceGroupUsingPUT()
                .body(deviceGroupModel).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Unauthorized
     */
    @Test
    public void shouldSee401AfterUpdateDeviceGroupUsingPUT() {
        CreateUpdateDeviceGroupModel deviceGroupModel = null;
        api.updateDeviceGroupUsingPUT()
                .body(deviceGroupModel).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Insufficient privileges
     */
    @Test
    public void shouldSee403AfterUpdateDeviceGroupUsingPUT() {
        CreateUpdateDeviceGroupModel deviceGroupModel = null;
        api.updateDeviceGroupUsingPUT()
                .body(deviceGroupModel).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Device Group not found
     */
    @Test
    public void shouldSee404AfterUpdateDeviceGroupUsingPUT() {
        CreateUpdateDeviceGroupModel deviceGroupModel = null;
        api.updateDeviceGroupUsingPUT()
                .body(deviceGroupModel).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Too many requests
     */
    @Test
    public void shouldSee429AfterUpdateDeviceGroupUsingPUT() {
        CreateUpdateDeviceGroupModel deviceGroupModel = null;
        api.updateDeviceGroupUsingPUT()
                .body(deviceGroupModel).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

}